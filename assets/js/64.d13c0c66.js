(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{418:function(e,a,s){"use strict";s.r(a);var t=s(42),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"subspace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subspace"}},[e._v("#")]),e._v(" Subspace")]),e._v(" "),s("p",[e._v("Inside Desmos, subspaces are the way with which anyone can distinguish a dApp with their users, posts and admins."),s("br"),e._v("\nA subspace can be seen as a group that belongs to a user who can decide how to handle users inside it."),s("br"),e._v("\nInside subspaces users can be:")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Registered or unregistered")]),e._v(":"),s("br"),e._v("\nThis will allow them to perform some kind of operations like to post inside the subspace\nor to put reactions, etc...")]),e._v(" "),s("li",[s("strong",[e._v("Added or Removed as admins")]),e._v(":"),s("br"),e._v("\nThis will allow them to moderate the subspace alongside the owner.")]),e._v(" "),s("li",[s("strong",[e._v("Banned or Unbanned")]),e._v(":"),s("br"),e._v("\nThis can happen when a user breaks the rules of a subspace.")])]),e._v(" "),s("h2",{attrs:{id:"contained-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contained-data"}},[e._v("#")]),e._v(" Contained data")]),e._v(" "),s("h2",{attrs:{id:"subspaceid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subspaceid"}},[e._v("#")]),e._v(" "),s("code",[e._v("SubspaceID")])]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("SubspaceID")]),e._v(" uniquely identifies each subspace. It can be specified from the creator and has to be a valid\nSHA-256 hash string.")]),e._v(" "),s("h2",{attrs:{id:"name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#name"}},[e._v("#")]),e._v(" "),s("code",[e._v("Name")])]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("Name")]),e._v(" is the human-readable name of the subspace. It must be a non-empty or blank string that matches the conditions\nof "),s("a",{attrs:{href:""}},[e._v("MinNameLengthParam")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"creator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creator"}},[e._v("#")]),e._v(" "),s("code",[e._v("Creator")])]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("Creator")]),e._v(" identifies the user that has created the subspace."),s("br"),e._v("\nIt's a string representation of a Bech32 address and, in order to be valid,"),s("br"),e._v("\nit must begin with the "),s("code",[e._v("desmos")]),e._v(" Bech32 human-readable part.")]),e._v(" "),s("h2",{attrs:{id:"owner"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#owner"}},[e._v("#")]),e._v(" "),s("code",[e._v("Owner")])]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("Owner")]),e._v(" identifies the owner of the subspace."),s("br"),e._v("\nIt can be equivalent to the "),s("code",[e._v("Creator")]),e._v(" field."),s("br"),e._v("\nIt's a string representation of a Bech32 address and, in order to be valid,"),s("br"),e._v("\nit must begin with the "),s("code",[e._v("desmos")]),e._v(" Bech32 human-readable part.")]),e._v(" "),s("h2",{attrs:{id:"open"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#open"}},[e._v("#")]),e._v(" "),s("code",[e._v("Open")])]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("Open")]),e._v(" field tells if users are free to post inside the subspace without being registered in it.\nIt's a boolean value, and it's set to "),s("code",[e._v("false")]),e._v(" by default.")]),e._v(" "),s("h2",{attrs:{id:"admins"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#admins"}},[e._v("#")]),e._v(" "),s("code",[e._v("Admins")])]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("Admins")]),e._v(" field contains all the subspace's admins."),s("br"),e._v("\nIt has to be an array of valid Bech32 addresses.")]),e._v(" "),s("h2",{attrs:{id:"registeredusers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#registeredusers"}},[e._v("#")]),e._v(" "),s("code",[e._v("RegisteredUsers")])]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("RegisteredUsers")]),e._v(" field contains all the subspace's users."),s("br"),e._v("\nIt has to be an array of valid Bech32 addresses.")]),e._v(" "),s("h2",{attrs:{id:"bannedusers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bannedusers"}},[e._v("#")]),e._v(" "),s("code",[e._v("BannedUsers")])]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("BannedUsers")]),e._v(" field contains all the subspace's banned users."),s("br"),e._v("\nIt has to be an array of valid Bech32 addresses.")])])}),[],!1,null,null,null);a.default=r.exports}}]);