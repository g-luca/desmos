(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{406:function(e,s,t){"use strict";t.r(s);var o=t(42),a=Object(o.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"cosmovisor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cosmovisor"}},[e._v("#")]),e._v(" Cosmovisor")]),e._v(" "),t("p",[e._v("The Cosmos team provides a tool named "),t("em",[e._v("Cosmovisor")]),e._v(" that allows your node to perform some automatic operations when needed. This is particularly useful when dealing with on-chain upgrades, because Cosmovisor can help you by taking care of downloading the updated binary and restarting the node for you.")]),e._v(" "),t("p",[e._v("If you want to learn how to setup Cosmovisor inside your full or validator node, please follow the guide below.")]),e._v(" "),t("h2",{attrs:{id:"setup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[e._v("#")]),e._v(" Setup")]),e._v(" "),t("h3",{attrs:{id:"_1-downloading-cosmovisor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-downloading-cosmovisor"}},[e._v("#")]),e._v(" 1. Downloading Cosmovisor")]),e._v(" "),t("p",[e._v("The first thing you have to do is downloading the "),t("code",[e._v("cosmovisor")]),e._v(" binary file. To do this you can execute the following command:")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("go get github.com/cosmos/cosmos-sdk/cosmovisor/cmd/cosmovisor\n")])])]),t("p",[e._v("This will download all the dependencies and build "),t("code",[e._v("cosmovisor")]),e._v(" for your machine. Once that's done, you can execute the following command to make sure that "),t("code",[e._v("cosmovisor")]),e._v(" is installed:")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("cosmovisor version\n")])])]),t("p",[e._v("It should print "),t("code",[e._v("DAEMON_NAME is not set")]),e._v(". If that's the case, you have installed "),t("code",[e._v("cosmovisor")]),e._v(" successfully.")]),e._v(" "),t("h3",{attrs:{id:"_2-setting-up-environmental-variables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-setting-up-environmental-variables"}},[e._v("#")]),e._v(" 2. Setting up environmental variables")]),e._v(" "),t("p",[e._v("Cosmovisor relies on the following environmental variables to work properly:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("DAEMON_HOME")]),e._v(" is the location where upgrade binaries should be kept (e.g. "),t("code",[e._v("$HOME/.desmos")]),e._v(").")]),e._v(" "),t("li",[t("code",[e._v("DAEMON_NAME")]),e._v(" is the name of the binary itself (eg. "),t("code",[e._v("desmos")]),e._v(").")]),e._v(" "),t("li",[t("code",[e._v("DAEMON_ALLOW_DOWNLOAD_BINARIES")]),e._v(" ("),t("em",[e._v("optional")]),e._v(") if set to "),t("code",[e._v("true")]),e._v(" will enable auto-downloading of new binaries\n(for security reasons, this is intended for full nodes rather than validators).")]),e._v(" "),t("li",[t("code",[e._v("DAEMON_RESTART_AFTER_UPGRADE")]),e._v(" ("),t("em",[e._v("optional")]),e._v(") if set to "),t("code",[e._v("true")]),e._v(" it will restart the sub-process with the same\ncommand line arguments and flags (but new binary) after a successful upgrade. By default, "),t("code",[e._v("cosmovisor")]),e._v(" dies\nafterwards and allows the supervisor to restart it if needed. Note that this will not auto-restart the child\nif there was an error.")])]),e._v(" "),t("p",[e._v("To properly set those variables, we suggest you to edit the "),t("code",[e._v("~/.profile")]),e._v(" file so that they are loaded when you log into your machine. To edit this file you can simply run")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("nano")]),e._v(" ~/.profile\n")])])]),t("p",[e._v("Once you're in, we suggest you to set the following values:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export DAEMON_HOME=$HOME/.desmos\nexport DAEMON_NAME=desmos\nexport DAEMON_ALLOW_DOWNLOAD_BINARIES=true\nexport DAEMON_RESTART_AFTER_UPGRADE=true\n")])])]),t("p",[e._v("Once you're done, please reload the "),t("code",[e._v("~/.profile")]),e._v(" file by running")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v(" ~/.profile\n")])])]),t("p",[e._v("You can verify the values set by running")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("echo $DAEMON_NAME\n")])])]),t("p",[e._v("If this outputs "),t("code",[e._v("desmos")]),e._v(" you are ready to go.")]),e._v(" "),t("h3",{attrs:{id:"_3-copying-desmos-files-in-the-proper-folders"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-copying-desmos-files-in-the-proper-folders"}},[e._v("#")]),e._v(" 3. Copying Desmos files in the proper folders")]),e._v(" "),t("p",[e._v("In order to work properly, Cosmovisor needs the "),t("code",[e._v("desmos")]),e._v(" binary to be placed in the "),t("code",[e._v("~/.desmos/cosmovisor/genesis/bin")]),e._v(" folder. To do this you can simply run the following command:")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" -p ~/.desmos/cosmovisor/genesis/bin/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("which")]),e._v(" desmos"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" ~/.desmos/cosmovisor/genesis/bin/\n")])])]),t("p",[e._v("To verify that you have setup everything correctly, you can run the following command:")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("cosmovisor version\n")])])]),t("p",[e._v("This should output the Desmos version.")]),e._v(" "),t("h3",{attrs:{id:"_4-restarting-your-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-restarting-your-node"}},[e._v("#")]),e._v(" 4. Restarting your node")]),e._v(" "),t("p",[e._v("Finally, if you've setup everything correctly you can now restart your node. To do this you can simply stop the running "),t("code",[e._v("desmos start")]),e._v(" and re-start your Desmos node using the following command:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cosmovisor start\n")])])]),t("h4",{attrs:{id:"updating-the-service-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#updating-the-service-file"}},[e._v("#")]),e._v(" Updating the service file")]),e._v(" "),t("p",[e._v("If you are running your node using a service, you need to update your service file to use "),t("code",[e._v("cosmovisor")]),e._v(" instead of "),t("code",[e._v("desmos")]),e._v(". To do this you can simply run the following command:")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("tee")]),e._v(" /etc/systemd/system/desmosd.service "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /dev/null "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("EOF  \n[Unit]\nDescription=Desmos Full Node\nAfter=network-online.target\n\n[Service]\nUser="),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$USER")]),e._v("\nExecStart="),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("which")]),e._v(" cosmovisor"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(' start\nRestart=always\nRestartSec=3\nLimitNOFILE=4096\n\nEnvironment="DAEMON_HOME='),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v('/.desmos"\nEnvironment="DAEMON_NAME=desmos"\nEnvironment="DAEMON_ALLOW_DOWNLOAD_BINARIES=true"\nEnvironment="DAEMON_RESTART_AFTER_UPGRADE=true"\n\n[Install]\nWantedBy=multi-user.target\nEOF')]),e._v("\n")])])]),t("p",[e._v("Once you have edited your system file, you need to reload it using the following command:")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl daemon-reload\n")])])]),t("p",[e._v("Finally, you can restart is as follows:")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl restart desmosd\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);