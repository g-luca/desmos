(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{425:function(e,t,s){"use strict";s.r(t);var a=s(42),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"create-a-local-testnet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-a-local-testnet"}},[e._v("#")]),e._v(" Create a local testnet")]),e._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("Required desmos executables")]),e._v(" "),s("p",[e._v("You need to "),s("RouterLink",{attrs:{to:"/install.html"}},[e._v("install "),s("code",[e._v("desmos")])]),e._v(" before going further.")],1)]),e._v(" "),s("p",[e._v("There are two types of local testnets:")]),e._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#creating-a-single-node-testnet"}},[e._v("Single node testnet")]),e._v(", which allows you to have a faster testnet with only one validator running on your machine.")])]),e._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#creating-a-multi-node-testnet"}},[e._v("Multi-node testnet")]),e._v(", which requires you to have "),s("a",{attrs:{href:"https://docker.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker"),s("OutboundLink")],1),e._v(" installed to run 4 validator nodes locally on your machine.")])])]),e._v(" "),s("h2",{attrs:{id:"creating-a-single-node-testnet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-single-node-testnet"}},[e._v("#")]),e._v(" Creating a single node testnet")]),e._v(" "),s("p",[e._v("To create a single node local testnet, run the following commands:")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("Create a local key. Replace "),s("code",[e._v("<your-key-name>")]),e._v(" with whatever name you prefer.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("desmos keys "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("your-key-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),s("p",[e._v("You will be required to input a password. Please make sure you use one that you will remember later. You should now\nsee an output like")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ desmos keys "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" jack --dry-run\n\n- name: jack\n  type: "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("local")]),e._v("\n  address: desmos1qdv08q76fmfwwzrxcqs78z6pzfxe88cgc5a3tk\n  pubkey: desmospub1addwnpepq2j9a35spphh6q529y2thg8tjw9l2c32hck98fnmu99sxpw9a9aegugm6xs\n  mnemonic: "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n  threshold: "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n  pubkeys: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n\n\n**Important** "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("write")]),e._v(" this mnemonic phrase "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" a safe place.\nIt is the only way to recover your account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" you ever forget your password.\n\nglory discover erosion mention grow prosper supreme term nephew venue pear eternal budget rely outdoor lobster strong sign space "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" soccer medal tuition patrol\n")])])]),s("p",[e._v("Make sure you save the shown mnemonic phrase in some safe place as it might return useful in the future.")])]),e._v(" "),s("li",[s("p",[e._v("Initialize the testnet")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("desmos init testnet --chain-id testnet\ndesmos add-genesis-account "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("your-key-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" 100000000000desmos\ndesmos gentx --amount 1000000000desmos --name "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("your-key-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\ndesmos collect-gentxs\n")])])]),s("p",[e._v("During the procedure you will be asked to input the same key password you have set inside point 1.")])]),e._v(" "),s("li",[s("p",[e._v("Start the testnet."),s("br"),e._v("\nOnce you have completed all the steps, you are ready to start your local testnet by running:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("desmos start\n")])])])])]),e._v(" "),s("h2",{attrs:{id:"creating-a-multi-node-testnet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-multi-node-testnet"}},[e._v("#")]),e._v(" Creating a multi node testnet")]),e._v(" "),s("p",[e._v("To create a local multi node testnet, you can simply run the following command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" localnet-start\n")])])]),s("p",[e._v("This command creates a 4-node network using the "),s("code",[e._v("desmoslabs/desmosnode")]),e._v(" image. The ports for each node are found in this\ntable:")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("Node ID")]),e._v(" "),s("th",[e._v("P2P Port")]),e._v(" "),s("th",[e._v("RPC Port")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[s("code",[e._v("desmosnode0")])]),e._v(" "),s("td",[s("code",[e._v("26656")])]),e._v(" "),s("td",[s("code",[e._v("26657")])])]),e._v(" "),s("tr",[s("td",[s("code",[e._v("desmosnode1")])]),e._v(" "),s("td",[s("code",[e._v("26659")])]),e._v(" "),s("td",[s("code",[e._v("26660")])])]),e._v(" "),s("tr",[s("td",[s("code",[e._v("desmosnode2")])]),e._v(" "),s("td",[s("code",[e._v("26661")])]),e._v(" "),s("td",[s("code",[e._v("26662")])])]),e._v(" "),s("tr",[s("td",[s("code",[e._v("desmosnode3")])]),e._v(" "),s("td",[s("code",[e._v("26663")])]),e._v(" "),s("td",[s("code",[e._v("26664")])])])])]),e._v(" "),s("p",[e._v("To update the binary, just rebuild it and restart the nodes:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("make build-linux localnet-start\n")])])]),s("h4",{attrs:{id:"configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("make localnet-start")]),e._v(" creates files for a 4-node testnet in "),s("code",[e._v("./build")]),e._v(" by calling the "),s("code",[e._v("desmos testnet")]),e._v(" command. This\noutputs a handful of files in the\n"),s("code",[e._v("./build")]),e._v(" directory:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ tree -L "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" build/\nbuild/\n├── desmos\n├── gentxs\n│   ├── node0.json\n│   ├── node1.json\n│   ├── node2.json\n│   └── node3.json\n├── node0\n│   ├── desmos\n│   │   ├── key_seed.json\n│   │   └── keys\n│   └── desmos\n│       ├── "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${LOG"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":-")]),e._v("desmos.log}")]),e._v("\n│       ├── config\n│       └── data\n├── node1\n│   ├── desmos\n│   │   └── key_seed.json\n│   └── desmos\n│       ├── "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${LOG"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":-")]),e._v("desmos.log}")]),e._v("\n│       ├── config\n│       └── data\n├── node2\n│   ├── desmos\n│   │   └── key_seed.json\n│   └── desmos\n│       ├── "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${LOG"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":-")]),e._v("desmos.log}")]),e._v("\n│       ├── config\n│       └── data\n└── node3\n    ├── desmos\n    │   └── key_seed.json\n    └── desmos\n        ├── "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${LOG"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":-")]),e._v("desmos.log}")]),e._v("\n        ├── config\n        └── data\n")])])]),s("p",[e._v("Each "),s("code",[e._v("./build/nodeN")]),e._v(" directory is mounted to the "),s("code",[e._v("/desmos")]),e._v(" directory in each container.")]),e._v(" "),s("h4",{attrs:{id:"logging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logging"}},[e._v("#")]),e._v(" Logging")]),e._v(" "),s("p",[e._v("Logs are saved under each "),s("code",[e._v("./build/nodeN/desmos/desmos.log")]),e._v(". You can also watch logs directly via Docker, for example:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("docker logs -f desmosnode0\n")])])]),s("h4",{attrs:{id:"keys-accounts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keys-accounts"}},[e._v("#")]),e._v(" Keys & Accounts")]),e._v(" "),s("p",[e._v("To interact with "),s("code",[e._v("desmos")]),e._v(" and start querying state or creating txs, you use the\n"),s("code",[e._v("desmos")]),e._v(" directory of any given node as your "),s("code",[e._v("home")]),e._v(", for example:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("desmos keys list --home ./build/node0/desmos\n")])])]),s("p",[e._v("Now that accounts exists, you may create new accounts and send those accounts funds!")]),e._v(" "),s("p",[s("strong",[e._v("Note")]),e._v(": Each node's seed is located at "),s("code",[e._v("./build/nodeN/desmos/key_seed.json")]),e._v(" and can be restored to the CLI using\nthe "),s("code",[e._v("desmos keys add --restore")]),e._v(" command")])])}),[],!1,null,null,null);t.default=n.exports}}]);